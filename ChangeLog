Version 0.2.5
	- better error checking when setting the number of primary keys
	- fixed some errors in writing primary index files
		level 2 index entries are now supported
	- readded time of modification when writing the header

Version 0.2.4
	- Paradox tables can be read by the Paradox software if the
	  database is stored as version 5.0
	- added prototypes for PX_[get|set]_[parameter|value]()
	- all strings passed to PX_[get|set]_[parameter|value]() are of
	  type const char
	- PX_get_[parameter|value]() return value in passed parameter and
	  return an error code instead
	- Implemented function PX_get_parameter()
	- All PX_get_data_xxx() functions return -1 on error, 0 if the
	  field value is NULL and 1 otherwise.

Version 0.2.3
	- updated many error messages
	- fixed segm fault when PX_close() was called more than once
	- initial support for writing a primary index (experimental)

Version 0.2.2
	- initial multi language support
	- added memory profiling
	- free some more memory in PX_delete()
	- renamed internal memory management functions from px_malloc, px_realloc,
	  px_free to _px_malloc, _px_realloc, _px_free
	- call pxdoc->free instead of px_free
	- fixed potential buffer overrun
	- PX_set_[target|input]encoding returns -2 if recoding is not supported

Version 0.2.1
	- PX_create_fp uses a fixed header size which was to small for databases with
	  many fields. The header size is now calculated and set accordingly.

Version 0.2.0
	- update to latest autoconf tools
	- added support for pkg-config
	- added new function PX_new3() which allows to also set user data which
	  is passed to the error handler
	- added generic way to set and get parameters
	- added support for external read, write, tell, seek functions

Version 0.1.9
	- encoding for data, that is to be written in a record can be set
	- build internal primary index for faster access. This will not
	  speed up searching but accessing records by record number.
	- fixed reading of primary index, now that I understand how it works
	- fixed data block handling (still not perfect, but works if records are
	  stored sequentially)
	- fixed several errors in fileformat which where due to lack of information
	- provide header field 'fileUpdateTime'
	- access data block as linked in list and not as stored in file
	- new functions to manipulate record data
	- made many error message better understandable
	- initial support to write db files

Version 0.1.2
	- primary index files can be read
	- added recno to struct px_datablockinfo
	- PX_get_record returns in referenced parameter deleted whether a
	  record is deleted or not

Version 0.1.1
	- fixed segm fault when calling PX_get_record()

Version 0.1.0
	- New function PX_get_record2() which has two extra parameter.
	  One to enable reading of deleted records and one to return
		internal data about the data block from which the record has
		been read.
	- added pxh->theonumrecords which is the number of records which
	  theoretically fit into all data blocks. This number can be
		much bigger that the number of records in the header. Also
		increases the max. record number to theonumrecords
		when reading a record.
	- DB files can contain many more records than the number of records
	  in the header. The remaining records are left overs, which were
		deleted but not removed from the file. pxlib can now handle those
		files.

Version 0.0.9
	- man pages are not created if docbook-to-man is missing
	- fixed many endianess bugs
	- new function PX_is_bigendian()
	- new function PX_has_recode_support()
	- fixed compile error with older versions of gcc
	- fixed two potential segm faults

Version 0.0.8
	- more documentation
	- recoding of data fields with iconv

Version 0.0.7
	- read more fields from the header
	- added spec file to build rpms
	- alpha fields are automatically recoded if required
	- function to access alpha field data

Version 0.0.6
	- more documentation
	- more functions to access database schema (PX_get_field(), PX_get_fields())
	- much better check for errors as not passing a document or out of
	  range values

Version 0.0.5
	- added PX_delete()
	- many memory leaks fixed
	- proper use of memory allocation functions

Version 0.0.4
  - fixed segm fault if input file does not exist
	- maxTableSize may now be larger as 32
	- add check for endianess
	- added data conversion functions

Version 0.0.3
  - check for zero record size and header size
	- added missing header files in distribution
	- added conversion routine from Gregorian date to serial date number
